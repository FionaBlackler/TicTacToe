/* @font-face deklariert custom font für die css */
@font-face {
    font-family: neon;
    src: url(../fonts/neon.ttf);
}

@font-face {
    font-family: futuristic;
    src: url(../fonts/NeogreyRegular.otf);
}

@font-face {
    font-family: eighties;
    src: url(../fonts/good-times-rg.otf);
}

/* in :root deklariert man variablen um sie später benutzen zu können -> einfachheitshalber */
:root{
    --clr-neon:hsl(0 0% 100%);
    --clr-neon-hue:hsl(317 200% 54%);
    --clr-player-x: hsl(154 100% 54%);
    --clr-player-o: hsl(38 100% 54%);
}

/* in body wird alles was auf der seite benutzt wird implentiert : generell font, webseit größe, hintergrund.. */
body{    
    height: 100%;
    width: 100%;
    min-width: 1000px;
    font-family: sans-serif;
    background-image: url("rough_black_metal_wall.jpg") !important;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

/* the "*{}" means "all elements", so we are setting all elements to have zero margins, and zero padding, thus making them look the same in all browsers.*/
*{ 
    margin:0;
    padding:0;
    box-sizing: border-box; 
}

/* class title mit neon font und flicker effekt */
.title{
    font-family: neon;
    color: var(--clr-neon);
    text-shadow:
    0 0 7px var(--clr-neon),
    0 0 10px var(--clr-neon),
    0 0 21px var(--clr-neon),
    0 0 42px var(--clr-neon-hue),
    0 0 82px var(--clr-neon-hue),
    0 0 92px var(--clr-neon-hue),
    0 0 102px var(--clr-neon-hue),
    0 0 151px var(--clr-neon-hue);
    text-align: center;
    padding-top: 2.5%;
    padding-bottom: 0.5em;
    padding-left:2em;
    text-transform: uppercase;
    font-size: 5rem;
    animation: flicker 1.5s infinite alternate; 
}

/* @keyframes lässt den Autor einzelne Schritte eine CSS-Anmation festlegen, indem er/sie Wegpunkte setzt */
@keyframes flicker {
    
    0%, 18%, 22%, 25%, 53%, 57%, 100% {  
        text-shadow:
        0 0 4px var(--clr-neon),
        0 0 11px var(--clr-neon),
        0 0 19px var(--clr-neon),
        0 0 40px var(--clr-neon-hue),
        0 0 80px var(--clr-neon-hue),
        0 0 90px var(--clr-neon-hue),
        0 0 100px var(--clr-neon-hue),
        0 0 150px var(--clr-neon-hue);  
    }
    
    20%, 24%, 55% {        
        text-shadow: none;
    }    
}

#result{
    text-align: center;
    padding-left: 13.5em;
    color: var(--clr-neon-hue);
    font-family: eighties;
    font-size: small;
    text-shadow:
    0 0 0.5em   hsl(0 0% 100% / 0.3),
    0 0 1em var(--clr-neon-hue);

}

/* container für den Hautpteil der Webseit (instructions, board, restartButton) -> flexbox wird definiert */
.container{
    height: 80vh;  
    width: 100%;
    min-width: 1000px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: row;
}

.instructions{
    margin-top: 2%;
    text-align: center;
    font-family: eighties;
    font-size: small;
    display: inline-block; /* lässt height und width verändern und respektiert margin und padding elemente */
    text-decoration: none;
    color: var(--clr-neon-hue);
    background-color: transparent;
    border: var(--clr-neon-hue) 0.125em solid;
    padding: 0.25em 1em;
    border-radius: 0.25em;
    text-shadow:
    0 0 0.5em   hsl(0 0% 100% / 0.3),
    0 0 1em var(--clr-neon-hue);
    box-shadow: inset 0 0 0.5em 0 var(--clr-neon-hue), 0 0 0.55em 0 var(--clr-neon-hue); /* inset -> innerer Bereich der Textbox */
}

/* grobe Definition des Spielfeldes */
.board{
    width: 450px;
    display: flex;
    flex-wrap: wrap;
}

/* Definition einzelner Zellen des Spielfeldes */
.cell{
    width: 150px;
    height: 150px;
    border: 3px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;    
    font-size: 5rem;
}

/* cell:nth-child(){ border... löscht den äusseren Rand des Spielfeldes */
.cell:nth-child(1), .cell:nth-child(2), .cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(1), .cell:nth-child(4), .cell:nth-child(7) {
    border-left: none;
}

.cell:nth-child(3), .cell:nth-child(6), .cell:nth-child(9) {
    border-right: none;
}

.cell:nth-child(7), .cell:nth-child(8), .cell:nth-child(9) {
    border-bottom: none;
}

/* Farbe für Player X */
#playerX {
    color: var(--clr-player-x);
    text-shadow:
    0 0 2em rgba(255, 255, 255, 0),
    0 0 1em var(--clr-player-x); 
}

/* Farbe für Player O */
#playerO {
    color: var(--clr-player-o);
    text-shadow: 
    0 0 2em rgba(255, 255, 255, 0),
    0 0 1em var(--clr-player-o); 
}

/* Definition des restartButtons im "Ruhe Zustand" */
.restart {
    font-family: futuristic;
    font-size: x-large;
    display: inline-block;
    cursor: pointer;
    color: var(--clr-neon-hue);
    background-color: transparent;
    border: var(--clr-neon-hue) 0.125em solid;
    padding: 0.25em 1em;
    border-radius: 0.25em;
    text-shadow:
    0 0 0.5em   hsl(0 0% 100% / 0.3),
    0 0 0.75em var(--clr-neon-hue);
    box-shadow: inset 0 0 0.5em 0 var(--clr-neon-hue), 0 0 0.55em 0 var(--clr-neon-hue);  
    transition: background-color 100ms linear;
}

/* Hover Effekt des restartButtons */
.restart:hover {
    color: rgba(255, 255, 255, 0.8);
    opacity: 0.8;
    box-shadow: 0 0 2em 0.5em var(--clr-neon-hue);
    background-color:var(--clr-neon-hue);
    transition: opacity 100ms linear;
}

/* einfache Fußzeile für Credits */
.footer{
    text-align: center;
    font-family: eighties;
    color: var(--clr-neon);
    padding-top: 5%;
    padding-left:10em;
    opacity: 0.5;
}
